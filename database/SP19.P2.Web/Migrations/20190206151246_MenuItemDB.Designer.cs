// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SP19.P2.Web.DatabaseContext;

namespace SP19.P2.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190206151246_MenuItemDB")]
    partial class MenuItemDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SP19.P2.Web.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int?>("PaymentOptionsPaymentOptionID");

                    b.Property<string>("RelatedUsersName");

                    b.HasKey("CustomerId");

                    b.HasIndex("PaymentOptionsPaymentOptionID");

                    b.HasIndex("RelatedUsersName");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.LineItem", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<string>("Description");

                    b.Property<string>("PerItemCost");

                    b.HasKey("LineId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Menu", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Name");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("picture");

                    b.Property<int>("price");

                    b.HasKey("MenuItemID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.PaymentOption", b =>
                {
                    b.Property<int>("PaymentOptionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress");

                    b.Property<string>("Nickname");

                    b.Property<string>("TokenizedCardSystem");

                    b.HasKey("PaymentOptionID");

                    b.ToTable("PaymentOptions");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfPayment");

                    b.Property<int?>("LineItemsLineId");

                    b.Property<int>("PaymentAuthNumber");

                    b.Property<int?>("PaymentOptionID");

                    b.Property<int>("PaymentReferenceNumber");

                    b.Property<int>("TotalAmount");

                    b.HasKey("ReceiptId");

                    b.HasIndex("LineItemsLineId");

                    b.HasIndex("PaymentOptionID");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Table", b =>
                {
                    b.Property<string>("NumberOfSeats")
                        .ValueGeneratedOnAdd();

                    b.HasKey("NumberOfSeats");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.TableBill", b =>
                {
                    b.Property<int>("TableBillId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("EndDateTime");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<int?>("TableFoodItemId");

                    b.Property<string>("TableNumberOfSeats");

                    b.HasKey("TableBillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TableFoodItemId");

                    b.HasIndex("TableNumberOfSeats");

                    b.ToTable("TableBills");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.TableFoodItem", b =>
                {
                    b.Property<int>("TableFoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOrdered");

                    b.Property<int>("Discount");

                    b.Property<string>("MenuItem");

                    b.HasKey("TableFoodItemId");

                    b.ToTable("TableFoodItems");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.HasKey("Name");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Customer", b =>
                {
                    b.HasOne("SP19.P2.Web.Models.PaymentOption", "PaymentOptions")
                        .WithMany()
                        .HasForeignKey("PaymentOptionsPaymentOptionID");

                    b.HasOne("SP19.P2.Web.Models.User", "RelatedUsers")
                        .WithMany()
                        .HasForeignKey("RelatedUsersName");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.MenuItem", b =>
                {
                    b.HasOne("SP19.P2.Web.Models.Menu")
                        .WithOne("MenuItem")
                        .HasForeignKey("SP19.P2.Web.Models.MenuItem", "Name");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.Receipt", b =>
                {
                    b.HasOne("SP19.P2.Web.Models.LineItem", "LineItems")
                        .WithMany()
                        .HasForeignKey("LineItemsLineId");

                    b.HasOne("SP19.P2.Web.Models.PaymentOption", "PaymentOption")
                        .WithMany()
                        .HasForeignKey("PaymentOptionID");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.TableBill", b =>
                {
                    b.HasOne("SP19.P2.Web.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("SP19.P2.Web.Models.TableFoodItem", "TableFoodItem")
                        .WithMany()
                        .HasForeignKey("TableFoodItemId");

                    b.HasOne("SP19.P2.Web.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableNumberOfSeats");
                });

            modelBuilder.Entity("SP19.P2.Web.Models.User", b =>
                {
                    b.HasOne("SP19.P2.Web.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
